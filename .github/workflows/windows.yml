name: Windows Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以v开头的标签时触发

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      id: cache-vcpkg
      with:
        path: ./vcpkg
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/build.rs') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Install dependencies on Windows
      if: steps.cache-vcpkg.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.bat
        ./vcpkg/vcpkg install gdal:x64-windows-release
        ./vcpkg/vcpkg install osg:x64-windows-release
        tree ./vcpkg/installed /F /A

    - name: Build
      run: cargo build --verbose --release

    - name: Create ZIP package
      run: |
        mkdir release
        cp ./target/release/*.exe ./release/
        cp ./target/release/*.dll ./release/
        # 如果需要，可以添加其他文件
        # cp ./target/release/*.config ./release/
        # cp ./README.md ./release/
        7z a release.zip .\release\*
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        body: |
          Windows build artifacts including:
          - Executable (.exe)
          - DLL files
          Generated automatically by GitHub Actions.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release.zip
        tag_name: ${{ github.ref_name }}
